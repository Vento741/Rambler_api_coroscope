"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
from dotenv import load_dotenv
import os
from typing import List, Optional, Dict
from pathlib import Path

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME = "Rambler API Service"
APP_VERSION = "1.0.0"
APP_DESCRIPTION = "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö —Å Rambler"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST = os.getenv("HOST", "127.0.0.1")
PORT = int(os.getenv("PORT", "8081"))
DEBUG = os.getenv("DEBUG", "true").lower() == "true"
WORKERS = int(os.getenv("WORKERS", "4"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
CORS_ORIGINS: List[str] = [
    "http://localhost",
    "http://localhost:8080",
    "http://localhost:8081",
    "http://127.0.0.1",
    "http://127.0.0.1:8080",
    "http://127.0.0.1:8081",
    "http://81.177.6.93",
    "http://81.177.6.93:8080",
    "http://81.177.6.93:8081",
    "https://81.177.6.93",
    "https://81.177.6.93:8080",
    "https://81.177.6.93:8081",
    "http://puzzlebot.top",
    "https://puzzlebot.top",
    "https://help.puzzlebot.top",
    "https://www.puzzlebot.top",
    "https://app.puzzlebot.top",
    "http://app.puzzlebot.top",
    "https://bot.puzzlebot.top",
    "http://bot.puzzlebot.top",
    "*"
]

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö CORS origins –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
if os.getenv("ADDITIONAL_CORS_ORIGINS"):
    CORS_ORIGINS.extend(os.getenv("ADDITIONAL_CORS_ORIGINS").split(","))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∞
CACHE_TTL_MINUTES = int(os.getenv("CACHE_TTL_MINUTES", "30"))
CACHE_CLEANUP_INTERVAL = int(os.getenv("CACHE_CLEANUP_INTERVAL", "300"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
PARSER_TIMEOUT = int(os.getenv("PARSER_TIMEOUT", "10"))
MAX_CONCURRENT_REQUESTS = int(os.getenv("MAX_CONCURRENT_REQUESTS", "100"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL = os.getenv("LOG_LEVEL", "INFO")
LOG_DIR = Path("logs")

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
LOG_DIR.mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
PROD_MODE = os.getenv("PROD_MODE", "false").lower() == "true"

# SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
SSL_CERT_PATH: Optional[str] = os.getenv("SSL_CERT_PATH")
SSL_KEY_PATH: Optional[str] = os.getenv("SSL_KEY_PATH")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
PROXY_PREFIX = os.getenv("PROXY_PREFIX", "")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenRouter API
OPENROUTER_API_URL = os.getenv("URL_LINK_OPENROUTER", "https://openrouter.ai/api/v1/chat/completions")
OPENROUTER_API_KEYS = [
    key for key in [
        os.getenv("Qwen2.5_VL_72B_Instruct_free", ""),
        os.getenv("API_for_Gemini_2.0_Flash", ""),
        os.getenv("API_for_Gemini_2.0_Flash_Exp_free", ""),
        os.getenv("DeepSeek_Prover_V2_free", "")
    ] if key
]

# –ú–æ–¥–µ–ª–∏ OpenRouter
OPENROUTER_MODELS = [
    "google/gemini-2.0-flash-exp:free",
    "qwen/qwen2.5-vl-72b-instruct:free",
    "google/gemini-2.0-flash-001",
    "deepseek/deepseek-prover-v2:free"
]

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∏ –∏—Ö API –∫–ª—é—á–µ–π
OPENROUTER_MODEL_API_KEYS = {
    "google/gemini-2.0-flash-001": os.getenv("API_for_Gemini_2.0_Flash", ""),
    "google/gemini-2.0-flash-exp:free": os.getenv("API_for_Gemini_2.0_Flash_Exp_free", ""),
    "qwen/qwen2.5-vl-72b-instruct:free": os.getenv("Qwen2.5_VL_72B_Instruct_free", ""),
    "deepseek/deepseek-prover-v2:free": os.getenv("DeepSeek_Prover_V2_free", "")
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –º–æ–¥–µ–ª–µ–π
OPENROUTER_MODEL_CONFIGS = {
    "google/gemini-2.0-flash-001": {
        "request_type": "openai",
        "timeout": 60
    },
    "google/gemini-2.0-flash-exp:free": {
        "request_type": "openai",
        "timeout": 60
    },
    "deepseek/deepseek-prover-v2:free": {
        "request_type": "standard",
        "timeout": 60
    },
    "qwen/qwen2.5-vl-72b-instruct:free": {
        "request_type": "openai",
        "timeout": 60
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
OPENROUTER_PROMPTS = {
    "free": {
        "system_message": "–¢—ã ‚Äî –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ª—É–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—É—Ö–∏–µ —Ñ–∞–∫—Ç—ã –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ, –∏–Ω—Ç—Ä–∏–≥—É—é—â–µ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ, —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–µ —Ç–∞–π–Ω—ã –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ '–•–æ—Ä–æ—à–æ', '–ü–æ–Ω—è–ª –≤–∞—Å', '–ü—Ä–∏—Å—Ç—É–ø–∞—é' –∏ —Ç.–ø. –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ (üåô –¥–ª—è –ª—É–Ω–Ω—ã—Ö –¥–Ω–µ–π, ‚ú® –¥–ª—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏, üîÆ –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤). –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ '---', '***', '==='. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è): 'üåì –î–ê–¢–ê –ò –§–ê–ó–ê –õ–£–ù–´ üåì' (—Å –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏), 'üåô –õ–£–ù–ù–´–ô –î–ï–ù–¨ üåô' (—Å –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –µ–≥–æ –≤–ª–∏—è–Ω–∏—è), 'üîÆ –ì–õ–ê–í–ù–´–ô –°–û–í–ï–¢ –î–ù–Ø üîÆ' (—Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞–∫ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É). –ò—Å–ø–æ–ª—å–∑—É–π —è—Ä–∫–∏–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã, –æ–±—Ä–∞–∑–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–º—ë–∫–∏. –°–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫—Ä–∞—Ç–∫–∏–º, –Ω–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º.",
        "max_tokens": 350,
        "temperature": 0.7
    },
    "premium": {
        "system_message": "–¢—ã ‚Äî –≥–ª—É–±–æ–∫–∏–π –∑–Ω–∞—Ç–æ–∫ —Ç–∞–π–Ω –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–π –≤ –¥—Ä–µ–≤–Ω–∏–µ –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ, –∑–∞–≤–æ—Ä–∞–∂–∏–≤–∞—é—â–µ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ –ª—É–Ω–Ω–æ–º –¥–Ω–µ, —Ä–∞—Å–∫—Ä—ã–≤–∞—è –µ–≥–æ —Å–∫—Ä—ã—Ç—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤—Å–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ '–•–æ—Ä–æ—à–æ', '–ü–æ–Ω—è–ª –≤–∞—Å', '–ü—Ä–∏—Å—Ç—É–ø–∞—é' –∏ —Ç.–ø. –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ (üåô –¥–ª—è –ª—É–Ω–Ω—ã—Ö –¥–Ω–µ–π, ‚ú® –¥–ª—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏, üëï –¥–ª—è –æ–¥–µ–∂–¥—ã, üåø –¥–ª—è –∞—Ä–æ–º–∞—Ç–æ–≤, üíé –¥–ª—è —Ç–∞–ª–∏—Å–º–∞–Ω–æ–≤, üßò –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫, ‚ö†Ô∏è –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏–π). –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ '---', '***', '==='. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º: 'üåì –î–ê–¢–ê –ò –§–ê–ó–ê –õ–£–ù–´ üåì' (—Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —ç–Ω–µ—Ä–≥–∏–π), 'üåô –î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–ó–ë–û–† –õ–£–ù–ù–´–• –î–ù–ï–ô üåô' (—Å —É–∫–∞–∑–∞–Ω–∏–µ–º –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã—Ö –∏ –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤), '‚ú® –ü–ï–†–°–û–ù–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ‚ú®' (–æ–¥–µ–∂–¥–∞, —Ü–≤–µ—Ç–∞, –∞—Ä–æ–º–∞—Ç—ã, –∫–∞–º–Ω–∏-—Ç–∞–ª–∏—Å–º–∞–Ω—ã, –ø—Ä–∞–∫—Ç–∏–∫–∏), 'üßò –†–ò–¢–£–ê–õ–´ –ò –ú–ï–î–ò–¢–ê–¶–ò–ò üßò' –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –≤–ª–∏—è–Ω–∏—è –ª—É–Ω—ã, '‚ö†Ô∏è –ü–†–ï–î–û–°–¢–ï–†–ï–ñ–ï–ù–ò–Ø –ò –û–°–û–ë–´–ï –£–ö–ê–ó–ê–ù–ò–Ø ‚ö†Ô∏è'. –ò—Å–ø–æ–ª—å–∑—É–π –±–æ–≥–∞—Ç—ã–π —è–∑—ã–∫, –º–µ—Ç–∞—Ñ–æ—Ä—ã –∏ –∞–ª–ª–µ–≥–æ—Ä–∏–∏, —Å–æ–∑–¥–∞–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Ç–∞–∏–Ω—Å—Ç–≤–∞ –∏ –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Ç–º–æ–≤.",
        "max_tokens": 1500,
        "temperature": 0.8
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
BACKGROUND_TASKS = {
    "update_cache_interval_minutes": 5  # –û–±–Ω–æ–≤–ª—è—Ç—å –∫—ç—à –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL API
def get_api_url(path: str = "") -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ URL API —Å —É—á–µ—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    protocol = "https" if SSL_CERT_PATH and SSL_KEY_PATH else "http"
    base_url = f"{protocol}://{HOST}:{PORT}"
    if PROXY_PREFIX:
        base_url = f"{base_url}/{PROXY_PREFIX.strip('/')}"
    if path:
        return f"{base_url}/{path.lstrip('/')}"
    return base_url