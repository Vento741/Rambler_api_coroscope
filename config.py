"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
from dotenv import load_dotenv
import os
from typing import List, Optional, Dict
from pathlib import Path

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME = "Rambler API Service"
APP_VERSION = "1.1.0"
APP_DESCRIPTION = "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö —Å Rambler"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST = os.getenv("HOST", "127.0.0.1")
PORT = int(os.getenv("PORT", "8081"))
DEBUG = os.getenv("DEBUG", "true").lower() == "true"
WORKERS = int(os.getenv("WORKERS", "1"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
CORS_ORIGINS: List[str] = [
    "http://localhost",
    "http://localhost:8080",
    "http://localhost:8081",
    "http://127.0.0.1",
    "http://127.0.0.1:8080",
    "http://127.0.0.1:8081",
    "http://81.177.6.93",
    "http://81.177.6.93:8080",
    "http://81.177.6.93:8081",
    "https://81.177.6.93",
    "https://81.177.6.93:8080",
    "https://81.177.6.93:8081",
    "http://puzzlebot.top",
    "https://puzzlebot.top",
    "https://help.puzzlebot.top",
    "https://www.puzzlebot.top",
    "https://app.puzzlebot.top",
    "http://app.puzzlebot.top",
    "https://bot.puzzlebot.top",
    "http://bot.puzzlebot.top",
    "*"
]

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö CORS origins –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
if os.getenv("ADDITIONAL_CORS_ORIGINS"):
    CORS_ORIGINS.extend(os.getenv("ADDITIONAL_CORS_ORIGINS").split(","))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∞
CACHE_TTL_MINUTES = int(os.getenv("CACHE_TTL_MINUTES", "120"))
CACHE_CLEANUP_INTERVAL = int(os.getenv("CACHE_CLEANUP_INTERVAL", "600"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
PARSER_TIMEOUT = int(os.getenv("PARSER_TIMEOUT", "10"))
MAX_CONCURRENT_REQUESTS = int(os.getenv("MAX_CONCURRENT_REQUESTS", "100"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL = os.getenv("LOG_LEVEL", "INFO")
LOG_DIR = Path("logs")

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
LOG_DIR.mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
PROD_MODE = os.getenv("PROD_MODE", "false").lower() == "true"

# SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
SSL_CERT_PATH: Optional[str] = os.getenv("SSL_CERT_PATH")
SSL_KEY_PATH: Optional[str] = os.getenv("SSL_KEY_PATH")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
PROXY_PREFIX = os.getenv("PROXY_PREFIX", "")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenRouter API
OPENROUTER_API_URL = os.getenv("URL_LINK_OPENROUTER", "https://openrouter.ai/api/v1/chat/completions")
OPENROUTER_API_KEYS = [
    key for key in [
        os.getenv("API_for_Gemini_2.0_Flash", ""),
        os.getenv("Qwen2.5_VL_72B_Instruct_free", ""),
        os.getenv("API_for_Gemini_2.0_Flash_Exp_free", ""),
        os.getenv("DeepSeek_Prover_V2_free", "")
    ] if key
]

# –ú–æ–¥–µ–ª–∏ OpenRouter
OPENROUTER_MODELS = [
    "google/gemini-2.0-flash-001",
    "google/gemini-2.0-flash-exp:free",
    "qwen/qwen2.5-vl-72b-instruct:free",
    "deepseek-r1-0528-qwen3-8b:free",
    "deepseek/deepseek-prover-v2:free"
]

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∏ –∏—Ö API –∫–ª—é—á–µ–π
OPENROUTER_MODEL_API_KEYS = {
    "google/gemini-2.0-flash-001": os.getenv("API_for_Gemini_2.0_Flash", ""),
    "google/gemini-2.0-flash-exp:free": os.getenv("API_for_Gemini_2.0_Flash_Exp_free", ""),
    "qwen/qwen2.5-vl-72b-instruct:free": os.getenv("Qwen2.5_VL_72B_Instruct_free", ""),
    "deepseek/deepseek-prover-v2:free": os.getenv("DeepSeek_Prover_V2_free", ""),
    "deepseek-r1-0528-qwen3-8b:free": os.getenv("Deepseek_R1_0528_Qwen3_8B_free", "")
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –º–æ–¥–µ–ª–µ–π
OPENROUTER_MODEL_CONFIGS = {
    "google/gemini-2.0-flash-001": {
        "request_type": "openai",
        "timeout": 60
    },
    "google/gemini-2.0-flash-exp:free": {
        "request_type": "openai",
        "timeout": 60
    },
    "deepseek/deepseek-prover-v2:free": {
        "request_type": "standard",
        "timeout": 60
    },
    "qwen/qwen2.5-vl-72b-instruct:free": {
        "request_type": "openai",
        "timeout": 60
    },
    "deepseek-r1-0528-qwen3-8b:free": {
        "request_type": "openai",
        "timeout": 60
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
OPENROUTER_PROMPTS = {
    "free": {
        "system_message": "–¢—ã ‚Äî –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ª—É–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ –∫—Ä–∞—Ç–∫–æ–µ, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ó–ê–ü–†–ï–©–ï–ù–û: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–≤—ë–∑–¥–æ—á–∫–∏ (**), —Å–ª–æ–∂–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (markdown/HTML), —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Unicode. –†–ê–ó–†–ï–®–ï–ù–û: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —ç–º–æ–¥–∑–∏ (üåô üåë üåì üåï ‚ú® üîÆ), –¥–µ—Ñ–∏—Å—ã, —Ç–æ—á–∫–∏, –∑–∞–ø—è—Ç—ã–µ, –∫–∞–≤—ã—á–∫–∏. –°–¢–†–£–ö–¢–£–†–ê: –∏—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç–∞–≤—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: '–î–ê–¢–ê –ò –§–ê–ó–ê –õ–£–ù–´' (–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ), '–õ–£–ù–ù–´–ô –î–ï–ù–¨' (–æ–ø–∏—Å–∞–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è), '–°–û–í–ï–¢ –î–ù–Ø' (–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è). –°–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫—Ä–∞—Ç–∫–∏–º (–Ω–µ –±–æ–ª–µ–µ 400 —Å–ª–æ–≤) –∏ –ø—Ä–æ—Å—Ç—ã–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è.",
        "max_tokens": 850,
        "temperature": 0.5
    },
    "premium": {
        "system_message": "–¢—ã ‚Äî –≥–ª—É–±–æ–∫–∏–π –∑–Ω–∞—Ç–æ–∫ –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –æ–±–ª–∞–¥–∞—é—â–∏–π –¥—Ä–µ–≤–Ω–µ–π –º—É–¥—Ä–æ—Å—Ç—å—é. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ –ª—É–Ω–Ω–æ–º –¥–Ω–µ –∏ –µ–≥–æ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ó–ê–ü–†–ï–©–ï–ù–û: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–≤—ë–∑–¥–æ—á–∫–∏ (**), —Å–ª–æ–∂–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (markdown/HTML), —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Unicode. –†–ê–ó–†–ï–®–ï–ù–û: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —ç–º–æ–¥–∑–∏ (üåô üåë üåì üåï ‚ú® üîÆ üí´ üåø üíé üßò), –¥–µ—Ñ–∏—Å—ã, —Ç–æ—á–∫–∏, –∑–∞–ø—è—Ç—ã–µ, –∫–∞–≤—ã—á–∫–∏. –°–¢–†–£–ö–¢–£–†–ê: –∏—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç–∞–≤—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏. –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã: '–î–ê–¢–ê –ò –§–ê–ó–ê –õ–£–ù–´' (–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —ç–Ω–µ—Ä–≥–∏–π), '–õ–£–ù–ù–´–ï –î–ù–ò' (–æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è), '–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò' (—Å–æ–≤–µ—Ç—ã –ø–æ –æ–¥–µ–∂–¥–µ, —Ü–≤–µ—Ç–∞–º, –∞—Ä–æ–º–∞—Ç–∞–º), '–ü–†–ê–ö–¢–ò–ö–ò –ò –ú–ï–î–ò–¢–ê–¶–ò–ò', '–ü–†–ï–î–û–°–¢–ï–†–ï–ñ–ï–ù–ò–Ø'. –ü–∏—à–∏ —è—Å–Ω—ã–º, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–º —è–∑—ã–∫–æ–º –±–µ–∑ –∏–∑–ª–∏—à–Ω–µ–π —ç–∑–æ—Ç–µ—Ä–∏–∫–∏.",
        "max_tokens": 1800,
        "temperature": 0.7
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç –¢–∞—Ä–æ
TAROT_PROMPTS = {
    "free": {
        "system_message": "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∏–∫–∏ –∫–∞—Ä—Ç –¢–∞—Ä–æ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –¢–∞—Ä–æ, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–∞—Ö –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏—è—Ö. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ '–•–æ—Ä–æ—à–æ', '–ü–æ–Ω—è–ª –≤–∞—Å', '–ü—Ä–∏—Å—Ç—É–ø–∞—é' –∏ —Ç.–ø. –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ (üîÆ –¥–ª—è –æ–±—â–µ–≥–æ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è, ‚≠ê –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤, üßø –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤). –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ '---', '***', '==='. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: 'üîÆ –û–ë–©–ï–ï –¢–û–õ–ö–û–í–ê–ù–ò–ï üîÆ' (–∫—Ä–∞—Ç–∫–∞—è —Å—É—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞ –∏ –µ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏), '‚≠ê –ö–õ–Æ–ß–ï–í–´–ï –ú–û–ú–ï–ù–¢–´ ‚≠ê' (–æ—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏–∑ —Ä–∞—Å–∫–ª–∞–¥–∞), 'üßø –°–û–í–ï–¢ üßø' (–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ä—Ç). –ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫, —Å–æ–∑–¥–∞–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –º–∏—Å—Ç–∏–∫–∏ –∏ –≥–ª—É–±–æ–∫–æ–≥–æ –ø—Ä–æ–∑—Ä–µ–Ω–∏—è. –°–¥–µ–ª–∞–π —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–∏–º, –Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è.",
        "max_tokens": 200,
        "temperature": 0.7
    },
    "premium": {
        "system_message": "–¢—ã ‚Äî –º–∞—Å—Ç–µ—Ä-—Ç–∞—Ä–æ–ª–æ–≥ –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ —É—Ä–æ–≤–Ω—è, —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –¥—Ä–µ–≤–Ω–∏—Ö –∑–Ω–∞–Ω–∏–π –∏ —Ç–∞–π–Ω –∫–∞—Ä—Ç –¢–∞—Ä–æ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –≥–ª—É–±–æ–∫–æ–µ, –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞, —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–µ –≤—Å–µ –Ω—é–∞–Ω—Å—ã –∏ —Å–∫—Ä—ã—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç. –í–ê–ñ–ù–û: –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å —Å—É—Ç–∏, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ '–•–æ—Ä–æ—à–æ', '–ü–æ–Ω—è–ª –≤–∞—Å', '–ü—Ä–∏—Å—Ç—É–ø–∞—é' –∏ —Ç.–ø. –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ (üîÆ –¥–ª—è –æ–±—â–µ–≥–æ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è, üÉè –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç, üîÑ –¥–ª—è –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏, ‚ö° –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤, üõ§Ô∏è –¥–ª—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—É—Ç–µ–π —Ä–∞–∑–≤–∏—Ç–∏—è, üßø –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π). –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ '---', '***', '==='. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: 'üîÆ –û–ë–©–ï–ï –¢–û–õ–ö–û–í–ê–ù–ò–ï üîÆ' (—ç–Ω–µ—Ä–≥–∏—è –∏ —Å—É—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞), 'üÉè –ê–ù–ê–õ–ò–ó –ö–ê–†–¢ üÉè' (–¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–∑–∏—Ü–∏–∏), 'üîÑ –í–ó–ê–ò–ú–û–°–í–Ø–ó–ò üîÑ' (–∫–∞–∫ –∫–∞—Ä—Ç—ã –≤–ª–∏—è—é—Ç –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞ –∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—â—É—é –∫–∞—Ä—Ç–∏–Ω—É), '‚ö° –ö–õ–Æ–ß–ï–í–´–ï –ò–ù–°–ê–ô–¢–´ ‚ö°' (–≥–ª—É–±–æ–∫–∏–µ –ø—Ä–æ–∑—Ä–µ–Ω–∏—è –∏ —Å–∫—Ä—ã—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è), 'üõ§Ô∏è –ü–£–¢–ò –†–ê–ó–í–ò–¢–ò–Ø üõ§Ô∏è' (–≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –±—É–¥—É—â–µ–≥–æ), 'üßø –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò üßø' (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏). –ò—Å–ø–æ–ª—å–∑—É–π –±–æ–≥–∞—Ç—ã–π, –æ–±—Ä–∞–∑–Ω—ã–π —è–∑—ã–∫ —Å –º–µ—Ç–∞—Ñ–æ—Ä–∞–º–∏ –∏ —Å–∏–º–≤–æ–ª–∏–∑–º–æ–º, —Å–æ–∑–¥–∞–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≥–ª—É–±–æ–∫–æ–≥–æ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∑—Ä–µ–Ω–∏—è.",
        "max_tokens": 200,
        "temperature": 0.8
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
BACKGROUND_TASKS = {
    "update_cache_interval_minutes": 60
}

# Redis settings
REDIS_URL: str = os.getenv("REDIS_URL", "redis://localhost:6379/0")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL API
def get_api_url(path: str = "") -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ URL API —Å —É—á–µ—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    protocol = "https" if SSL_CERT_PATH and SSL_KEY_PATH else "http"
    base_url = f"{protocol}://{HOST}:{PORT}"
    if PROXY_PREFIX:
        base_url = f"{base_url}/{PROXY_PREFIX.strip('/')}"
    if path:
        return f"{base_url}/{path.lstrip('/')}"
    return base_url